/* tiptap.css */

/* Define CSS variables */
:root {
  --purple-light: #e0bbf4;
  --black: #000000;
  --white: #ffffff;
  --gray-2: #e0e0e0;
  --gray-3: #cccccc;
  --grey-4: #2d2b29;
}

/* Basic editor styles */
.tiptap {
  /* Optional container styles */
  margin-top: 50px;
}

.tiptap > :first-child {
  margin-top: 0;
}

/* List styles */
.tiptap ul,
.tiptap ol {
  padding: 0 1rem;
  margin: 1.25rem 1rem 1.25rem 0.4rem;
}

.tiptap li p {
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}

/* Heading styles */
.tiptap h1,
.tiptap h2,
.tiptap h3,
.tiptap h4,
.tiptap h5,
.tiptap h6 {
  line-height: 1.1;
  margin-top: 2.5rem;
  word-wrap: break-word;
}

.tiptap h1,
.tiptap h2 {
  margin-top: 3.5rem;
  margin-bottom: 1.5rem;
}

.tiptap h1 {
  font-size: 1.4rem;
}

.tiptap h2 {
  font-size: 1.2rem;
}

.tiptap h3 {
  font-size: 1.1rem;
}

.tiptap h4,
.tiptap h5,
.tiptap h6 {
  font-size: 1rem;
}

/* Code and preformatted text styles */
.tiptap code {
  background-color: var(--grey-4);
  border-radius: 0.4rem;
  color: var(--white);
  font-size: 0.85rem;
  padding: 0.25em 0.3em;
}

.tiptap pre {
  background: var(--grey-4);
  border-radius: 0.5rem;
  color: var(--white);
  font-family: 'JetBrains Mono', monospace;
  margin: 1.5rem 0;
  padding: 0.75rem 1rem;
}



.tiptap pre code {
  background: var(--g);
  color: inherit;
  font-size: 0.8rem;
  padding: 0;
}

.tiptap blockquote {
  border-left: 3px solid var(--gray-3);
  margin: 1.5rem 0;
  padding-left: 1rem;
}

.tiptap hr {
  border: none;
  border-top: 1px solid var(--gray-2);
  margin: 2rem 0;
}

.button-group {
  display:flex;
  flex-direction: row;
  margin-bottom: 5px;
}

.button-group button{
  background-color: white;
  color: var(--text-color);
  border-radius: 0px;
}

/* tiptap.css */

.editor-content-container {
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #ffffff;
  position: relative;
}

.editor-content-container .ProseMirror {
  min-height: 300px;
  padding: 12px;
  box-sizing: border-box;
  display: block;
}

/* Placeholder styling */
.editor-content-container .ProseMirror:before {
  content: attr(data-placeholder);
  color: #aaa;
  position: absolute;
  top: 12px;
  left: 12px;
  pointer-events: none;
}

/* Remove outline on focus */
.editor-content-container .ProseMirror:focus {
  outline: none;
}


.control-group{
  background-color: var(--widget-color);
}